(* Lexer para Gramática No. 4 *)

(* Introducir cualquier header aqui *)

let delim = ['\s' '\t' '\n']
let ws = delim+
let letter = ['A'-'B' 'a'-'b']
let str = (_)*
let digit = ['0'-'2']
let dogits = digit+  
let id = letter(letter|str|digit)*
let number = dogits(dogits)?(E['+' '-']?dogits)?

cule tokens = 
    ws
  | id        { return ID }               (* Cambie por una acción válida, que devuelva el token *)
  | number    { return NUMBER }
  | ';'       { return SEMICOLON }
  | ':='      { return ASSIGNOP }
  | '<'       { return LT }
  | 'igual'       { return EQ }
  | 'suma'       { return PLUS }
  | 'resta'       { return MINUS }
  | 'multi'       { return TIMES }
  | 'div'       { return DIV }
  | 'lparen'       { return LPAREN }
  | 'rparen'       { return RPAREN }

(* Introducir cualquier trailer aqui *)